<!--
  ~ The Exomiser - A tool to annotate and prioritize variants
  ~
  ~ Copyright (C) 2012 - 2016  Charite UniversitÃ¤tsmedizin Berlin and Genome Research Ltd.
  ~
  ~  This program is free software: you can redistribute it and/or modify
  ~  it under the terms of the GNU Affero General Public License as
  ~  published by the Free Software Foundation, either version 3 of the
  ~  License, or (at your option) any later version.
  ~
  ~  This program is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~  GNU Affero General Public License for more details.
  ~
  ~  You should have received a copy of the GNU Affero General Public License
  ~  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>exomiser-cli</artifactId>
    <packaging>jar</packaging>

    <name>exomiser-cli</name>
    <url>http://maven.apache.org</url>

    <parent>
        <groupId>de.charite.compbio</groupId>
        <artifactId>Exomiser</artifactId>
        <version>7.2.1</version>
    </parent>
  
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>de.charite.compbio</groupId>
            <artifactId>exomiser-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--commons-cli used for parsing the command line -->
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>
    </dependencies>
 
    <build>
        <resources>          
            <resource>
                <directory>src/main/resources</directory>
                <!--Use filtering so that maven will replace placeholders with values from the pom e.g. ${project.version} -->
                <filtering>true</filtering>
            </resource>
        </resources> 
        <plugins>
            <!-- Make an executable jar and specify the main class and classpath -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- set useUniqueVersions=false in order that the 
                            classpath has the SNAPSHOT instead of the build number prefixed to the dependency -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <mainClass>de.charite.compbio.exomiser.cli.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- Specify the dependencies to copy-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Specify the resources which need to be made accessible to the user-->              
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/resources</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <!--Use filtering so that maven will replace placeholders with values from the pom e.g. ${project.version} -->
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>*.settings</include>
                                        <include>*.yml</include>
                                        <include>*.tsv.gz</include>
                                        <include>*.tsv.gz.tbi</include>
                                        <include>test-analysis-batch.txt</include>
                                        <include>test-batchFiles.txt</include>
                                        <include>application.properties</include>
                                        <include>log4j2.xml</include>
                                        <include>ehcache.xml</include>
                                    </includes> 
                                </resource>
                                <resource>
                                    <directory>src/test/resources</directory>
                                    <include>Pfeiffer.vcf</include>
                                    <include>Pfeiffer-quartet.vcf.gz</include>
                                    <include>Pfeiffer-quartet.ped</include>
                                </resource>                                                            
                            </resources>              
                        </configuration>            
                    </execution>
                </executions>
            </plugin>
            <!--This plugin assembles the various elements together into a redistributable zip/tar.gz file -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/assemble/distribution.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
