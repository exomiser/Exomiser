#
# The Exomiser - A tool to annotate and prioritize genomic variants
#
# Copyright (c) 2016-2021 Queen Mary University of London.
# Copyright (c) 2012-2016 Charité Universitätsmedizin Berlin and Genome Research Ltd.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

## exomiser root data directory ##
# root path where data is to be downloaded and worked on. It is assumed that all the files required by exomiser listed
# in this properties file will be found in the data directory, unless specifically overridden here. Exomiser will default
# to using a directory named 'data' in the installation directory, however it is often a good idea to specify the full
# system path as this will allow the data to be installed in a different directory to the application.
#exomiser.data-directory=/data/exomiser-data

## optional data sources ##
# The location of these files need to be specified for each assembly in the sections below
# REMM can be downloaded from https://zenodo.org/record/4768448
# REMM is required for the genome preset.
remm.version=0.3.1.post1
# CADD can be downloaded from http://cadd.gs.washington.edu/download
# CADD is an optional datasource
cadd.version=1.4

### hg19 assembly ###
exomiser.hg19.data-version=${genome.data.version}
# transcript source will default to ensembl. Can define as ucsc/ensembl/refseq
#exomiser.hg19.transcript-source=ensembl
# location of CADD/REMM Tabix files - you will need these for analysis of non-coding variants.
# You will require the tsv.gz and tsv.gz.tbi (tabix) file pairs.
# Un-comment and add the full path to the relevant tsv.gz files if you want to enable these.
#exomiser.hg19.cadd-snv-path=${exomiser.data-directory}/cadd/${cadd.version}/hg19/whole_genome_SNVs.tsv.gz
#exomiser.hg19.cadd-in-del-path=${exomiser.data-directory}/cadd/${cadd.version}/hg19/InDels.tsv.gz
#exomiser.hg19.remm-path=${exomiser.data-directory}/remm/ReMM.v${remm.version}.hg19.tsv.gz
# local frequencies are required to be normalised in the same manner as the input VCF and frequency values must be percentages.
#exomiser.hg19.local-frequency-path=${exomiser.data-directory}/local/local_frequency_test_hg19.tsv.gz
#exomiser.hg19.variant-white-list-path=${exomiser.hg19.data-version}_hg19_clinvar_whitelist.tsv.gz
#exomiser.hg19.clin-var-data-version=${genome.data.version}
#exomiser.hg19.use-clinvar-white-list=true

### hg38 assembly ###
# To enable analysis of samples called against the hg38 assembly copy the hg19 above and just replace the hg19 with hg38
#exomiser.hg38.data-version=${genome.data.version}
#exomiser.hg38.cadd-snv-path=${exomiser.data-directory}/cadd/${cadd.version}/whole_genome_SNVs.tsv.gz
#exomiser.hg38.cadd-in-del-path=${exomiser.data-directory}/cadd/${cadd.version}/InDels.tsv.gz
#exomiser.hg38.remm-path=${exomiser.data-directory}/remm/ReMM.v${remm.version}.hg38.tsv.gz
#exomiser.hg38.local-frequency-path=${exomiser.data-directory}/local/local_frequency_test_hg38.tsv.gz
#exomiser.hg38.variant-white-list-path=${exomiser.hg38.data-version}_hg38_clinvar_whitelist.tsv.gz
#exomiser.hg38.clin-var-data-version=${genome.data.version}
#exomiser.hg38.use-clinvar-white-list=true

### phenotypes ###
exomiser.phenotype.data-version=${phenotype.data.version}
#exomiser.phenotype.data-directory=${exomiser.data-directory}/${exomiser.phenotype.data-version}_phenotype
# String random walk data file
#exomiser.phenotype.random-walk-file-name=rw_string_10.mv
#exomiser.phenotype.random-walk-index-file-name=rw_string_9_05_id2index.gz

### caching ###
# If you're running exomiser in batch mode there might be some performance benefit if you enable caching. The 'simple'
# option will continue to store data in memory *without* limit - this means for really long-running batch jobs and/or
# whole genomes you may run out of memory.
# If this is likely choose the caffeine option and uncomment spring.cache.caffeine.spec and adjust the cache size
# to your requirements
#none/simple/caffeine
#spring.cache.type=none
#spring.cache.caffeine.spec=maximumSize=60000

### logging ###
# Logging is highly configurable - see https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.logging.file-output
#logging.file.name=logs/exomiser.log
logging.level.com.zaxxer.hikari=ERROR ${java.version}