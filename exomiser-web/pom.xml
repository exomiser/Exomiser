<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ The Exomiser - A tool to annotate and prioritize variants
  ~
  ~ Copyright (C) 2012 - 2016  Charite UniversitÃ¤tsmedizin Berlin and Genome Research Ltd.
  ~
  ~  This program is free software: you can redistribute it and/or modify
  ~  it under the terms of the GNU Affero General Public License as
  ~  published by the Free Software Foundation, either version 3 of the
  ~  License, or (at your option) any later version.
  ~
  ~  This program is distributed in the hope that it will be useful,
  ~  but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~  GNU Affero General Public License for more details.
  ~
  ~  You should have received a copy of the GNU Affero General Public License
  ~  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>exomiser-web</artifactId>
    <packaging>war</packaging>

    <name>exomiser-web</name>

    <parent>
        <artifactId>Exomiser</artifactId>
        <groupId>de.charite.compbio</groupId>
        <version>7.2.1</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--path to where the database and other resources are found in exomiser.properties-->
        <data.dir>C:/Users/jj8/Documents/exomiser-cli-4.0.0/data</data.dir>
        <warName>exomiser</warName>
    </properties>

    <profiles>
        <profile>
            <id>sanger</id>
            <properties>
                <data.dir>/www/data/exomiser</data.dir>
                <warName>resources#software#exomiser</warName>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>de.charite.compbio</groupId>
            <artifactId>exomiser-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!--Spring framework-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <type>jar</type>
        </dependency>
        <!--https://github.com/jayway/JsonPath-->
        <!--Jayway is a Java DSL for reading JSON documents-->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <scope>test</scope>
        </dependency>
        <!--Jackson JSON stuff-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <!--Templating engine for the views-->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring4</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--Use filtering so that maven will replace placeholders with values from the pom e.g. ${project.version}-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>${warName}</warName>
                    <!--if you're trying to develop html templates on a running 
                    server in NetBeans comment the webResources section out and 
                    the templates will be automatically deployed -->
                    <webResources>
                        <resource>
                            <directory>src/test/resources</directory>
                            <includes>
                                <include>Pfeiffer.vcf</include>
                            </includes>
                            <targetPath>resources</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
